//#include <Wire.h>
//#include <Adafruit_INA219.h> 
//#include <Adafruit_PWMServoDriver.h>
//
//Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver(0x40);
//int LFhip1, LHhip2, RHhip3, RFhip4, LFknee5, LHknee6, RHknee7, RFknee8;
//float x1, x2, x3, x4, x5, x6, x7, x8;
//float a1, a2, a3, a4, a5, a6, a7, a8;
//float r1, r2, r3, r4, r5, r6, r7, r8;
////Parameter x is the initial positi`on x0.
////Parameter a is the amplitude A.
////Parameter r is the phase fai.
//unsigned long Runtime=26; 
//float lastTime = 0;
//float totalEnergy = 0;
//Adafruit_INA219 sensor219(0x41);
//float current = 0;
//int upper = 370 ;
//int lower = 290 ;
//void setup() {
//
//  Serial.begin(9600);
////  Serial.println("Starting! (for debug purposes)");
//   pwm.begin();
////   sensor219.begin();
//   pwm.setPWMFreq(60);  // Set to whatever you like, we don't use it in this demo!
//   delay(10);
//   
////   x1 = 300; x2 = 300; x3 = 300; x4 = 300; x5 = 300; x6 = 300; x7 = 300; x8 = 300;
////   a1 = 65; a2 = 65; a3 = 65; a4 = 65; a5 = 30; a6 = 24; a7 = 24; a8 = 30;
//// test
////   r1 = r4 = 60;
////   r2 = r3 = 60;
////   r5 = r7 = -60;
////   r6 = r8 = 0;
////   x1 = x2 = x3 = x4 = 330;
////   x5 = x6 = x7 = x8 = 330;
////   a1 = a4 = 58;
////   a2 = a3 = 68;
////   a5 = a8 = 33;
////   a6 = a7 = 28;
////BO
// r1 = r4 = 180;
// r2 = r3 = 0;
// r5 = r7 = 90;
// r6 = r8 = 180;
// x1 = x2 = x3 = x4 = 330;
// x5 = x6 = x7 = x8 = 340;
// a1 = a4 = 65;
// a2 = a3 = 75;
// a5 = a8 = 35;
// a6 = a7 = 20;
//
////CMA-ES
//// r1 = r4 = -80;
//// r2 = r3 = 12;
//// r5 = r7 = 36;
//// r6 = r8 = -97;
//// x1 = x2 = x3 = x4 = 297;
//// x5 = x6 = x7 = x8 = 273;
//// a1 = a4 = 58;
//// a2 = a3 = -140;
//// a5 = a8 = 28;
//// a6 = a7 = -103;
//
////fall 1
//// r1 = r4 = 147;
//// r2 = r3 = -158;
//// r5 = r7 = 72;
//// r6 = r8 = 211;
//// x1 = x2 = x3 = x4 = 249;
//// x5 = x6 = x7 = x8 = 107;
//// a1 = a4 = 332;
//// a2 = a3 = 97;
//// a5 = a8 = 731;
//// a6 = a7 = 296;
//
////fall 2
//// r1 = r4 = 300;
//// r2 = r3 = -112;
//// r5 = r7 = 192;
//// r6 = r8 = 164;
//// x1 = x2 = x3 = x4 = 205;
//// x5 = x6 = x7 = x8 = 34;
//// a1 = a4 = 101;
//// a2 = a3 = 415;
//// a5 = a8 = 720;
//// a6 = a7 = 301;
//
//
// 
////   x1 = x2 = x3 = x4 = 300;
////   x5 = x6 = x7 = x8 = 300;
////   a1 = a4 = 67;
////   a2 = a3 = 0;
////   a5 = a8 = 67;
////   a6 = a7 = 90;
////   r1 = r4 = 180;
////   r2 = r3 = 90;
////   r5 = r7 = 180;
////   r6 = r8 = 90;
//// LFH Pin 1, 300 is equivalent to 45 degrees, + moves it forward
//// LHH Pin 2, 300 is equivalent to 45 degrees, + moves it forward
//// RHH Pin 3, 300 is equivalent to 45 degrees, - moves it forward
//// RFH Pin 4, 300 is equivalent to 45 degrees, - moves it forward
//// LFK Pin 5, 300 is equivalent to 90 degrees, + inwards
//// LHK Pin 6, 300 is equivalent to 90 degrees, + inwards
//// RHK Pin 7, 300 is equivalent to 90 degrees, + inwards
//// RFK Pin 8, 300 is equivalent to 90 degrees, + inwards
//// Looks like 90 is equivalent to 0 degrees, 540 is equivalent to 270 degrees
//
////Standing + short delays
//pwm.setPWM(5, 0, 330);
//pwm.setPWM(6, 0, 330);
//pwm.setPWM(7, 0, 330);
//pwm.setPWM(8, 0, 330);
//delay(1000);
//pwm.setPWM(1, 0, 330);
//delay(1000);
//pwm.setPWM(2, 0, 330);
//delay(1000);
//pwm.setPWM(3, 0, 330);
//delay(1000);
//pwm.setPWM(4, 0, 330);
//delay(1000);
//}
//
//void loop() {
//
//   unsigned long Nowtime= millis()/1000; //Get the current system running time 
////   Serial.print("Test!");
//   
//      if(Nowtime < Runtime)             
////If the system running time is up to the default
//{
//
//   float period = millis()/1000.0;    //  <--- The denominator will be the period
//   LFhip1 = x1 + a1 * sin( period * 2.0 * PI + r1*PI/180);
//   if(LFhip1>=upper) LFhip1=upper;
//   if(LFhip1<=lower) LFhip1=lower;
//   LHhip2 = x2 + a2 * sin( period * 2.0 * PI + r2*PI/180);
//   if(LHhip2>=upper) LHhip2=upper;
//   if(LHhip2<=lower) LHhip2=lower;
//   RHhip3 = x3 + a3 * sin( period * 2.0 * PI + r3*PI/180);
//   if(RHhip3>=upper) RHhip3=upper;
//   if(RHhip3<=lower) RHhip3=lower;
//   RFhip4 = x4 + a4 * sin( period * 2.0 * PI + r4*PI/180);
//   if(RFhip4>=upper) RFhip4=upper;
//   if(RFhip4<=lower) RFhip4=lower;
//
//   LFknee5 = x5 + a5 * sin( period * 2.0 * PI + r5*PI/180);
//   if(LFknee5>=upper) LFknee5=upper;
//   if(LFknee5<=lower) LFknee5=lower;
//   LHknee6 = x6 + a6 * sin( period * 2.0 * PI + r6*PI/180);
//   if(LHknee6>=upper) LHknee6=upper;
//   if(LHknee6<=lower) LHknee6=lower;
//   RHknee7 = x7 + a7 * sin( period * 2.0 * PI + r7*PI/180);
//   if(RHknee7>=upper) RHknee7=upper;
//   if(RHknee7<=lower) RHknee7=lower;
//   RFknee8 = x8 + a8 * sin( period * 2.0 * PI + r8*PI/180);
//   if(RFknee8>=upper) RFknee8=upper;
//   if(RFknee8<=lower) RFknee8=lower;
//
//  pwm.setPWM(5, 0, LFknee5);
//  pwm.setPWM(6, 0, LHknee6);
//  pwm.setPWM(7, 0, RHknee7);
//  pwm.setPWM(8, 0, RFknee8);
//  //delay(50);
//  
//  pwm.setPWM(1, 0, LFhip1);
//  pwm.setPWM(2, 0, LHhip2);
//  pwm.setPWM(3, 0, RHhip3);
//  pwm.setPWM(4, 0, RFhip4); 
//  
//  
////  float busVoltage = 0;
////  float current = 0; // 以毫安为单位
////  float power = 0;
////  
////  busVoltage = sensor219.getBusVoltage_V();  //获取电压值
////  current = sensor219.getCurrent_mA();    // 获取电流值
////  power = busVoltage * (current/1000)*(Nowtime - lastTime); // 计算功率
////  totalEnergy = totalEnergy + power ;
////  lastTime = Nowtime;
//////  Serial.print(busVoltage); Serial.print("&");
//////////  Serial.print(" V");  Serial.print("&");
//////  Serial.print(current); Serial.print("&");
//////////  Serial.print(" mA");Serial.print("&");
//////  Serial.print(power); Serial.print("&");
////////  Serial.print(" W");  Serial.print("&");
////  Serial.print(totalEnergy); Serial.print("\n");
////  delay(100);
//}
//////else{      
//////       }
////////  Serial.print(LFknee5);
////////   Serial.print(" , ");
////////   Serial.print(LHknee6);
////////   Serial.print(" , ");
////////   Serial.print(RHknee7);
////////   Serial.print(" , ");
////////   Serial.println(RFknee8);
//}



//#include <Wire.h>
//void setup(){  
//  Wire.begin();
//  Serial.begin(9600);
//  while (!Serial);             // Leonardo: wait for serial monitor
//  Serial.println("\nI2C Scanner");
//}  
//void loop(){
//   byte error, address;
//   int nDevices;
//   Serial.println("Scanning...");
//   nDevices = 0;
//  for(address = 1; address < 127; address++ )  
//  {
//    // The i2c_scanner uses the return value of
//    // the Write.endTransmisstion to see if
//    // a device did acknowledge to the address.
//    Wire.beginTransmission(address);
//    error = Wire.endTransmission();
//     if (error == 0)
//    {
//      Serial.print("I2C device found at address 0x");
//      if (address<16)
//        Serial.print("0");
//      Serial.print(address,HEX);
//      Serial.println("  !");
//      nDevices++;
//    }
//    else if (error==4)
//    {
//      Serial.print("Unknown error at address 0x");
//      if (address<16)
//        Serial.print("0");
//      Serial.println(address,HEX);
//    }
//  }
//  if (nDevices == 0)
//    Serial.println("No I2C devices found\n");
//  else
//    Serial.println("done\n");
// 
//  delay(5000);  // wait 5 seconds for next scan
//}


#include <Adafruit_PWMServoDriver.h>
#include <Adafruit_INA219.h>
#include <SoftwareSerial.h>
#include <Wire.h>

Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();
Adafruit_INA219 sensor219(0x41); // INA219的声明和实例    
SoftwareSerial BT(8,7); // RX-8, TX-7

unsigned long Runtime=8;  //original 12//   ,    6 for not collision
float lastTime = 0;
const int MPU6050_addr=0x68;
int16_t AccX,AccY,AccZ,Temp,GyroX,GyroY,GyroZ;
int16_t lastJointValue[8];  
int16_t n = 27;
//ample 70
//int16_t hip4[27]= { 375, 368, 364, 364, 363, 369, 379, 379, 378, 379, 379, 378, 378, 367, 358, 352, 354, 357, 369, 384, 384, 384, 384, 383, 383, 383, 379 };
//int16_t ank4[27]= { 329, 329, 326, 318, 314, 313, 315, 319, 324, 329, 329, 329, 329, 329, 326, 323, 318, 315, 313, 314, 317, 321, 326, 329, 329, 329, 329 };
//int16_t hip1[27]= { 375, 366, 350, 328, 301, 279, 280, 290, 306, 326, 348, 366, 375, 370, 361, 345, 329, 307, 291, 284, 281, 294, 311, 329, 348, 361, 364 };
//int16_t ank1[27]= { 329, 328, 327, 326, 323, 321, 318, 318, 321, 325, 328, 329, 330, 327, 324, 323, 323, 322, 320, 319, 320, 323, 327, 329, 329, 329, 329 };
//int16_t hip2[27]= { 381, 373, 358, 335, 308, 292, 293, 294, 301, 315, 335, 358, 379, 379, 375, 361, 342, 322, 308, 302, 294, 295, 304, 320, 344, 369, 380 };
//int16_t ank2[27]= { 321, 316, 314, 318, 325, 329, 329, 329, 328, 328, 328, 326, 323, 321, 319, 319, 320, 325, 329, 328, 329, 329, 329, 328, 327, 325, 322 };
//int16_t hip3[27]= { 280, 281, 285, 288, 287, 289, 302, 308, 303, 299, 295, 292, 284, 277, 281, 284, 288, 286, 289, 299, 301, 303, 301, 298, 295, 291, 279 };
//int16_t ank3[27]= { 309, 311, 315, 322, 330, 330, 329, 326, 321, 316, 314, 312, 312, 312, 315, 318, 323, 328, 329, 329, 327, 321, 315, 312, 311, 310, 309 };
//amp 0.6
//int16_t hip4[27]= { 374, 370, 367, 367, 367, 370, 376, 376, 376, 376, 376, 376, 376, 369, 364, 360, 361, 363, 370, 379, 379, 379, 379, 379, 379, 379, 376 };
//int16_t ank4[27]= { 326, 326, 324, 320, 317, 317, 318, 320, 323, 326, 326, 326, 326, 326, 324, 323, 320, 318, 317, 317, 319, 321, 324, 326, 326, 326, 326 };
//int16_t hip1[27]= { 356, 350, 341, 328, 311, 298, 299, 305, 314, 326, 340, 350, 356, 353, 347, 338, 328, 315, 305, 301, 299, 307, 317, 328, 340, 347, 349 };
//int16_t ank1[27]= { 327, 326, 326, 325, 323, 322, 320, 320, 322, 324, 326, 327, 327, 326, 324, 323, 323, 323, 321, 321, 321, 323, 326, 327, 327, 327, 327 };
//int16_t hip2[27]= { 362, 357, 348, 334, 318, 308, 309, 309, 314, 322, 334, 348, 360, 360, 358, 350, 338, 326, 318, 314, 309, 310, 315, 325, 339, 354, 361 };
//int16_t ank2[27]= { 322, 319, 318, 320, 324, 327, 327, 327, 326, 326, 326, 325, 323, 322, 321, 321, 321, 324, 327, 326, 327, 327, 327, 326, 326, 324, 323 };
//int16_t hip3[27]= { 284, 285, 287, 289, 288, 289, 297, 301, 298, 295, 293, 291, 286, 282, 285, 286, 289, 288, 289, 295, 297, 298, 297, 295, 293, 291, 283 };
//int16_t ank3[27]= { 312, 314, 316, 320, 325, 325, 324, 323, 320, 317, 315, 314, 314, 314, 316, 318, 321, 324, 324, 324, 323, 320, 316, 314, 314, 313, 312 };
//amp 0.7
//int16_t hip4[27]= { 374, 369, 366, 366, 366, 370, 377, 377, 376, 377, 377, 376, 376, 368, 362, 358, 359, 361, 370, 380, 380, 380, 380, 380, 380, 380, 377 };
//int16_t ank4[27]= { 327, 327, 325, 319, 316, 316, 317, 320, 323, 327, 327, 327, 327, 327, 325, 323, 319, 317, 316, 316, 318, 321, 325, 327, 327, 327, 327 };
//int16_t hip1[27]= { 361, 354, 343, 328, 309, 293, 294, 301, 312, 326, 342, 354, 361, 357, 351, 340, 328, 313, 302, 297, 295, 304, 316, 328, 342, 351, 353 };
//int16_t ank1[27]= { 327, 327, 326, 325, 323, 322, 320, 320, 322, 324, 327, 327, 328, 326, 324, 323, 323, 322, 321, 320, 321, 323, 326, 327, 327, 327, 327 };
//int16_t hip2[27]= { 366, 361, 350, 334, 315, 304, 305, 305, 310, 320, 334, 350, 365, 365, 362, 352, 339, 325, 315, 311, 305, 306, 312, 324, 340, 358, 366 };
//int16_t ank2[27]= { 322, 318, 317, 319, 324, 327, 327, 327, 326, 326, 326, 325, 323, 322, 320, 320, 321, 324, 327, 326, 327, 327, 327, 326, 326, 324, 322 };
//int16_t hip3[27]= { 283, 284, 286, 288, 288, 289, 298, 302, 299, 296, 293, 291, 286, 281, 284, 286, 288, 287, 289, 296, 298, 299, 298, 295, 293, 291, 282 };
//int16_t ank3[27]= { 311, 313, 316, 321, 326, 326, 325, 323, 320, 316, 315, 314, 314, 314, 316, 318, 321, 325, 325, 325, 324, 320, 316, 314, 313, 312, 311 };
//amp 0.8
//int16_t hip4[27]= { 374, 369, 365, 365, 365, 369, 377, 377, 377, 377, 377, 377, 377, 368, 361, 356, 357, 360, 369, 381, 381, 381, 381, 381, 381, 381, 377 };
//int16_t ank4[27]= { 327, 327, 325, 319, 315, 315, 316, 319, 323, 327, 327, 327, 327, 327, 325, 323, 319, 316, 315, 315, 318, 321, 325, 327, 327, 327, 327 };
//int16_t hip1[27]= { 365, 358, 345, 328, 306, 288, 289, 297, 310, 326, 344, 358, 365, 361, 354, 341, 328, 311, 298, 292, 290, 300, 314, 328, 344, 354, 356 };
//int16_t ank1[27]= { 328, 327, 326, 325, 323, 321, 319, 319, 321, 324, 327, 328, 328, 326, 324, 323, 323, 322, 320, 320, 320, 323, 326, 328, 328, 328, 328 };
//int16_t hip2[27]= { 371, 365, 353, 334, 313, 300, 301, 301, 307, 318, 334, 353, 369, 369, 366, 355, 340, 324, 313, 308, 301, 302, 309, 322, 341, 361, 370 };
//int16_t ank2[27]= { 321, 317, 316, 319, 324, 328, 328, 328, 327, 327, 327, 325, 323, 321, 320, 320, 320, 324, 328, 327, 328, 328, 328, 327, 326, 324, 322 };
//int16_t hip3[27]= { 282, 283, 286, 288, 287, 289, 299, 304, 300, 297, 294, 291, 285, 279, 283, 285, 288, 287, 289, 297, 299, 300, 299, 296, 294, 291, 281 };
//int16_t ank3[27]= { 310, 312, 315, 321, 327, 327, 326, 324, 320, 316, 314, 313, 313, 313, 315, 318, 322, 326, 326, 326, 325, 320, 315, 313, 312, 311, 310 };
//amp0.9
//int16_t hip4[27]= { 374, 368, 364, 364, 364, 369, 378, 378, 377, 378, 378, 377, 377, 367, 359, 354, 355, 358, 369, 382, 382, 382, 382, 382, 382, 382, 378 };
//int16_t ank4[27]= { 328, 328, 325, 318, 314, 314, 315, 319, 323, 328, 328, 328, 328, 328, 325, 323, 318, 315, 314, 314, 317, 321, 325, 328, 328, 328, 328 };
//int16_t hip1[27]= { 370, 362, 347, 328, 303, 283, 284, 293, 308, 326, 346, 362, 370, 365, 357, 343, 328, 309, 294, 288, 285, 297, 312, 328, 346, 357, 360 };
//int16_t ank1[27]= { 328, 327, 326, 325, 323, 321, 318, 318, 321, 324, 327, 328, 329, 326, 324, 323, 323, 322, 320, 319, 320, 323, 326, 328, 328, 328, 328 };
//int16_t hip2[27]= { 376, 369, 355, 334, 310, 296, 297, 297, 304, 316, 334, 355, 374, 374, 370, 358, 341, 323, 310, 305, 297, 298, 306, 321, 342, 365, 375 };
//int16_t ank2[27]= { 321, 316, 315, 318, 324, 328, 328, 328, 327, 327, 327, 325, 323, 321, 319, 319, 320, 324, 328, 327, 328, 328, 328, 327, 326, 324, 322 };
//int16_t hip3[27]= { 281, 282, 285, 288, 287, 289, 300, 306, 301, 298, 294, 291, 284, 278, 282, 284, 288, 286, 289, 298, 300, 301, 300, 297, 294, 291, 280 };
//int16_t ank3[27]= { 309, 311, 315, 321, 328, 328, 327, 325, 320, 316, 314, 312, 312, 312, 315, 318, 322, 327, 327, 327, 326, 320, 315, 312, 311, 310, 309 };
//amp 1.2
//int16_t hip4[27]= { 375, 366, 362, 362, 360, 368, 380, 380, 378, 380, 380, 378, 378, 365, 354, 347, 350, 353, 368, 386, 386, 386, 386, 384, 384, 384, 380 };
//int16_t ank4[27]= { 329, 329, 326, 318, 314, 313, 315, 319, 324, 329, 329, 329, 329, 329, 326, 323, 318, 315, 313, 314, 317, 321, 326, 329, 329, 329, 329 };
//int16_t hip1[27]= { 384, 373, 354, 327, 295, 269, 270, 282, 301, 325, 351, 373, 384, 378, 367, 348, 329, 302, 283, 275, 271, 287, 307, 329, 351, 367, 371 };
//int16_t ank1[27]= { 329, 328, 327, 326, 323, 321, 318, 318, 321, 325, 328, 329, 330, 327, 324, 323, 323, 322, 320, 319, 320, 323, 327, 329, 329, 329, 329 };
//int16_t hip2[27]= { 390, 380, 362, 335, 302, 283, 284, 286, 294, 311, 335, 362, 388, 388, 383, 366, 343, 319, 302, 295, 286, 287, 298, 317, 346, 376, 389 };
//int16_t ank2[27]= { 321, 316, 314, 318, 325, 329, 329, 329, 328, 328, 328, 326, 323, 321, 319, 319, 320, 325, 329, 328, 329, 329, 329, 328, 327, 325, 322 };
//int16_t hip3[27]= { 277, 278, 283, 287, 286, 288, 304, 311, 305, 300, 295, 292, 282, 274, 278, 282, 287, 284, 288, 300, 302, 305, 302, 299, 295, 290, 276 };
//int16_t ank3[27]= { 309, 311, 315, 322, 330, 330, 329, 326, 321, 316, 314, 312, 312, 312, 315, 318, 323, 328, 329, 329, 327, 321, 315, 312, 311, 310, 309 };
//amp 1.4
//int16_t hip4[27]= { 375, 365, 360, 360, 358, 367, 381, 381, 379, 381, 381, 379, 379, 364, 351, 343, 346, 350, 367, 388, 388, 388, 388, 386, 386, 386, 381 };
//int16_t ank4[27]= { 329, 329, 326, 318, 314, 313, 315, 319, 324, 329, 329, 329, 329, 329, 326, 323, 318, 315, 313, 314, 317, 321, 326, 329, 329, 329, 329 };
//int16_t hip1[27]= { 393, 381, 358, 327, 290, 259, 260, 274, 297, 325, 355, 381, 393, 386, 374, 351, 329, 298, 276, 266, 262, 280, 304, 329, 355, 374, 378 };
//int16_t ank1[27]= { 329, 328, 327, 326, 323, 321, 318, 318, 321, 325, 328, 329, 330, 327, 324, 323, 323, 322, 320, 319, 320, 323, 327, 329, 329, 329, 329 };
//int16_t hip2[27]= { 399, 388, 367, 335, 297, 275, 276, 278, 287, 307, 335, 367, 397, 397, 391, 371, 345, 317, 297, 289, 278, 279, 292, 314, 348, 383, 398 };
//int16_t ank2[27]= { 321, 316, 314, 318, 325, 329, 329, 329, 328, 328, 328, 326, 323, 321, 319, 319, 320, 325, 329, 328, 329, 329, 329, 328, 327, 325, 322 };
//int16_t hip3[27]= { 275, 276, 282, 286, 285, 288, 306, 314, 307, 302, 296, 292, 281, 271, 276, 281, 286, 283, 288, 302, 304, 307, 304, 300, 296, 290, 274 };
//int16_t ank3[27]= { 309, 311, 315, 322, 330, 330, 329, 326, 321, 316, 314, 312, 312, 312, 315, 318, 323, 328, 329, 329, 327, 321, 315, 312, 311, 310, 309 };
//amp1.6
int16_t hip4[27]= { 376, 364, 358, 358, 356, 366, 382, 382, 380, 382, 382, 380, 380, 363, 348, 339, 342, 347, 366, 390, 390, 390, 390, 388, 388, 388, 382 };
int16_t ank4[27]= { 329, 329, 326, 318, 314, 313, 315, 319, 324, 329, 329, 329, 329, 329, 326, 323, 318, 315, 313, 314, 317, 321, 326, 329, 329, 329, 329 };
int16_t hip1[27]= { 403, 388, 363, 327, 284, 249, 251, 267, 292, 324, 359, 388, 403, 395, 380, 355, 329, 294, 268, 257, 252, 273, 300, 329, 359, 380, 385 };
int16_t ank1[27]= { 329, 328, 327, 326, 323, 321, 318, 318, 321, 325, 328, 329, 330, 327, 324, 323, 323, 322, 320, 319, 320, 323, 327, 329, 329, 329, 329 };
int16_t hip2[27]= { 409, 396, 372, 335, 292, 266, 268, 270, 281, 303, 335, 372, 406, 406, 399, 377, 346, 314, 292, 282, 270, 271, 286, 311, 350, 390, 407 };
int16_t ank2[27]= { 321, 316, 314, 318, 325, 329, 329, 329, 328, 328, 328, 326, 323, 321, 319, 319, 320, 325, 329, 328, 329, 329, 329, 328, 327, 325, 322 };
int16_t hip3[27]= { 273, 274, 281, 286, 284, 287, 308, 318, 310, 303, 297, 292, 279, 268, 274, 279, 286, 282, 287, 303, 306, 310, 306, 302, 297, 290, 271 };
int16_t ank3[27]= { 309, 311, 315, 322, 330, 330, 329, 326, 321, 316, 314, 312, 312, 312, 315, 318, 323, 328, 329, 329, 327, 321, 315, 312, 311, 310, 309 };
//ample 80 linear
//int16_t hip4[27]= { 382, 378, 375, 371, 367, 378, 386, 386, 386, 386, 386, 386, 386, 375, 365, 355, 363, 370, 377, 385, 392, 392, 392, 392, 391, 391, 386 };
//int16_t ank4[27]= { 329, 329, 325, 321, 317, 313, 317, 321, 325, 329, 329, 329, 329, 329, 326, 322, 319, 316, 313, 316, 319, 322, 326, 329, 329, 329, 329 };
//int16_t hip1[27]= { 381, 359, 337, 315, 293, 271, 287, 303, 319, 334, 350, 366, 381, 368, 355, 341, 328, 314, 301, 287, 222, 290, 305, 321, 337, 353, 369 };
//int16_t ank1[27]= { 329, 327, 325, 323, 322, 320, 318, 320, 322, 324, 326, 328, 330, 329, 327, 325, 324, 322, 321, 319, 322, 324, 327, 329, 329, 329, 329 };
//int16_t hip2[27]= { 389, 368, 348, 328, 307, 287, 301, 315, 329, 344, 358, 372, 386, 374, 362, 350, 337, 325, 313, 301, 289, 305, 321, 338, 354, 371, 387 };
//int16_t ank2[27]= { 321, 317, 314, 319, 324, 329, 329, 328, 328, 327, 326, 324, 323, 321, 320, 319, 322, 325, 329, 329, 329, 329, 329, 327, 326, 324, 322 };
//int16_t hip3[27]= { 273, 278, 282, 287, 292, 296, 301, 305, 299, 293, 287, 282, 276, 270, 273, 277, 281, 284, 288, 292, 296, 299, 294, 288, 282, 277, 271 };
//int16_t ank3[27]= { 309, 314, 320, 325, 330, 328, 326, 323, 321, 319, 316, 314, 312, 314, 317, 319, 322, 324, 327, 329, 326, 323, 320, 318, 315, 312, 309 };
//ample 80
//int16_t hip4[27]= { 382, 374, 369, 369, 368, 375, 387, 386, 385, 386, 386, 385, 385, 372, 362, 355, 357, 361, 374, 392, 392, 392, 392, 391, 391, 391, 386 };
//int16_t ank4[27]= { 329, 329, 326, 318, 314, 313, 315, 319, 324, 329, 329, 329, 329, 329, 326, 323, 318, 315, 313, 314, 317, 321, 326, 329, 329, 329, 329 };
//int16_t hip1[27]= { 381, 371, 353, 328, 297, 271, 273, 284, 302, 325, 351, 371, 381, 375, 366, 347, 329, 304, 285, 277, 274, 289, 308, 329, 350, 365, 369 };
//int16_t ank1[27]= { 329, 328, 327, 326, 323, 321, 318, 318, 321, 325, 328, 329, 330, 327, 324, 323, 323, 322, 320, 319, 320, 323, 327, 329, 329, 329, 329 };
//int16_t hip2[27]= { 389, 380, 362, 335, 305, 287, 288, 289, 297, 313, 336, 362, 386, 386, 381, 366, 344, 321, 304, 298, 289, 290, 300, 318, 346, 374, 387 };
//int16_t ank2[27]= { 321, 316, 314, 318, 325, 329, 329, 329, 328, 328, 328, 326, 323, 321, 319, 319, 320, 325, 329, 328, 329, 329, 329, 328, 327, 325, 322 };
//int16_t hip3[27]= { 273, 274, 279, 282, 281, 283, 298, 305, 299, 294, 290, 286, 278, 270, 274, 277, 282, 280, 283, 294, 297, 299, 297, 293, 291, 285, 271 };
//int16_t ank3[27]= { 309, 311, 315, 322, 330, 330, 329, 326, 321, 316, 314, 312, 312, 312, 315, 318, 323, 328, 329, 329, 327, 321, 315, 312, 311, 310, 309 };
//degree 10 polymonial regression
//int16_t hip4[27]= { 376, 372, 369, 369, 370, 373, 375, 377, 378, 379, 379, 377, 374, 370, 366, 364, 364, 366, 371, 377, 382, 383, 382, 379, 379, 382, 377 };
//int16_t ank4[27]= { 328, 330, 324, 318, 314, 313, 315, 319, 323, 327, 329, 330, 330, 328, 325, 322, 318, 315, 314, 314, 316, 321, 326, 329, 330, 328, 329 };
//int16_t hip1[27]= { 375, 370, 362, 347, 333, 323, 320, 325, 336, 349, 361, 370, 374, 373, 368, 359, 348, 337, 328, 323, 323, 328, 338, 350, 361, 367, 369 };
//int16_t ank1[27]= { 329, 327, 328, 327, 323, 319, 318, 319, 322, 325, 327, 329, 329, 328, 326, 324, 322, 321, 320, 320, 321, 323, 326, 329, 330, 329, 329 };
//int16_t hip2[27]= { 379, 376, 364, 351, 339, 331, 326, 327, 333, 343, 355, 367, 375, 378, 375, 368, 357, 346, 337, 331, 329, 331, 335, 344, 357, 373, 378 };
//int16_t ank2[27]= { 321, 315, 316, 320, 324, 327, 329, 330, 329, 328, 327, 325, 323, 321, 320, 320, 321, 324, 326, 329, 330, 330, 329, 327, 326, 326, 322 };
//int16_t hip3[27]= { 321, 323, 323, 324, 326, 329, 333, 335, 335, 333, 330, 327, 324, 322, 321, 322, 324, 326, 329, 331, 333, 333, 333, 332, 330, 327, 321 };
//int16_t ank3[27]= { 309, 310, 316, 323, 328, 330, 329, 326, 322, 317, 314, 311, 311, 312, 315, 319, 323, 327, 329, 329, 326, 322, 316, 312, 310, 311, 309 };
//ample 1.2
//int16_t hip4[27]= { 376, 371, 367, 367, 369, 372, 375, 377, 378, 379, 379, 377, 373, 369, 364, 361, 361, 364, 370, 377, 383, 384, 383, 379, 379, 383, 377 };
//int16_t ank4[27]= { 329, 331, 324, 317, 312, 311, 313, 318, 323, 327, 330, 331, 331, 329, 325, 321, 317, 313, 312, 312, 314, 320, 326, 330, 331, 329, 330 };
//int16_t hip1[27]= { 380, 374, 364, 346, 329, 317, 314, 320, 333, 349, 363, 374, 379, 377, 371, 361, 347, 334, 323, 317, 317, 323, 335, 350, 363, 370, 373 };
//int16_t ank1[27]= { 329, 327, 328, 327, 322, 317, 316, 317, 321, 325, 327, 329, 329, 328, 326, 323, 321, 320, 319, 319, 320, 322, 326, 329, 331, 329, 329 };
//int16_t hip2[27]= { 384, 380, 366, 350, 336, 326, 320, 321, 329, 341, 355, 369, 379, 383, 379, 371, 357, 344, 333, 326, 324, 326, 331, 342, 357, 377, 383 };
//int16_t ank2[27]= { 320, 313, 314, 319, 323, 327, 329, 331, 329, 328, 327, 325, 322, 320, 319, 319, 320, 323, 326, 329, 331, 331, 329, 327, 326, 326, 321 };
//int16_t hip3[27]= { 319, 322, 322, 323, 325, 329, 334, 336, 336, 334, 330, 326, 323, 320, 319, 320, 323, 325, 329, 331, 334, 334, 334, 332, 330, 326, 319 };
//int16_t ank3[27]= { 307, 308, 315, 323, 329, 332, 331, 327, 322, 316, 313, 309, 309, 310, 314, 319, 323, 328, 331, 331, 327, 322, 315, 310, 308, 309, 307 };
//ample 1.4
//int16_t hip4[27]= { 376, 371, 366, 366, 368, 372, 375, 378, 379, 380, 380, 378, 373, 368, 362, 359, 359, 362, 369, 378, 385, 386, 385, 380, 380, 385, 378 };
//int16_t ank4[27]= { 330, 332, 324, 316, 310, 309, 311, 317, 323, 328, 331, 332, 332, 330, 325, 321, 316, 311, 310, 310, 313, 320, 327, 331, 332, 330, 331 };
//int16_t hip1[27]= { 385, 378, 367, 346, 326, 312, 308, 315, 330, 349, 365, 378, 384, 382, 375, 363, 347, 332, 319, 312, 312, 319, 333, 350, 365, 374, 377 };
//int16_t ank1[27]= { 330, 327, 329, 327, 322, 316, 315, 316, 320, 325, 327, 330, 330, 329, 326, 323, 320, 319, 318, 318, 319, 322, 326, 330, 332, 330, 330 };
//int16_t hip2[27]= { 389, 385, 368, 350, 333, 322, 315, 316, 325, 339, 356, 372, 384, 388, 384, 374, 358, 343, 330, 322, 319, 322, 328, 340, 358, 381, 388 };
//int16_t ank2[27]= { 319, 311, 312, 318, 323, 327, 330, 332, 330, 329, 327, 325, 322, 319, 318, 318, 319, 323, 326, 330, 332, 332, 330, 327, 326, 326, 320 };
//int16_t hip3[27]= { 318, 321, 321, 322, 325, 329, 335, 337, 337, 335, 330, 326, 322, 319, 318, 319, 322, 325, 329, 332, 335, 335, 335, 333, 330, 326, 318 };
//int16_t ank3[27]= { 305, 306, 314, 324, 331, 334, 333, 328, 323, 316, 312, 307, 307, 309, 313, 319, 324, 330, 333, 333, 328, 323, 314, 309, 306, 307, 305 };
//ample1.6
//int16_t hip4[27]= { 376, 370, 365, 365, 367, 372, 375, 378, 380, 381, 381, 378, 373, 367, 360, 357, 357, 360, 368, 378, 386, 388, 386, 381, 381, 386, 378 };
//int16_t ank4[27]= { 331, 334, 324, 315, 308, 307, 310, 316, 323, 329, 332, 334, 334, 331, 326, 321, 315, 310, 308, 308, 311, 319, 327, 332, 334, 331, 332 };
//int16_t hip1[27]= { 390, 382, 369, 345, 323, 307, 302, 310, 328, 349, 368, 382, 389, 387, 379, 365, 347, 329, 315, 307, 307, 315, 331, 350, 368, 377, 381 };
//int16_t ank1[27]= { 331, 328, 329, 328, 321, 315, 313, 315, 320, 325, 328, 331, 331, 329, 326, 323, 320, 318, 317, 317, 318, 321, 326, 331, 333, 331, 331 };
//int16_t hip2[27]= { 395, 390, 371, 350, 331, 318, 310, 311, 321, 337, 356, 375, 388, 393, 388, 377, 359, 342, 327, 318, 315, 318, 324, 339, 359, 385, 393 };
//int16_t ank2[27]= { 318, 309, 310, 317, 323, 328, 331, 333, 331, 330, 328, 325, 322, 318, 317, 317, 318, 323, 326, 331, 333, 333, 331, 328, 326, 326, 320 };
//int16_t hip3[27]= { 317, 320, 320, 321, 325, 329, 336, 339, 339, 336, 331, 326, 321, 318, 317, 318, 321, 325, 329, 333, 336, 336, 336, 334, 331, 326, 317 };
//int16_t ank3[27]= { 303, 304, 314, 325, 333, 336, 335, 330, 323, 315, 311, 306, 306, 307, 312, 319, 325, 331, 335, 335, 330, 323, 314, 307, 304, 306, 303 };
//amp 1.8
//int16_t hip4[27]= { 377, 370, 364, 364, 366, 371, 375, 379, 380, 382, 382, 379, 373, 366, 359, 355, 355, 359, 368, 379, 388, 389, 388, 382, 382, 388, 379 };
//int16_t ank4[27]= { 332, 335, 324, 314, 306, 305, 308, 315, 323, 330, 333, 335, 335, 332, 326, 321, 314, 308, 306, 306, 310, 319, 328, 333, 335, 332, 333 };
//int16_t hip1[27]= { 395, 386, 372, 345, 320, 302, 296, 305, 325, 349, 370, 386, 394, 392, 383, 367, 347, 327, 311, 302, 302, 311, 329, 350, 370, 381, 385 };
//int16_t ank1[27]= { 332, 328, 330, 328, 321, 314, 312, 314, 319, 325, 328, 332, 332, 330, 326, 323, 319, 317, 316, 316, 317, 321, 326, 332, 334, 332, 332 };
//int16_t hip2[27]= { 400, 395, 373, 350, 328, 314, 305, 306, 317, 335, 357, 378, 393, 398, 393, 380, 360, 341, 324, 314, 310, 314, 321, 337, 360, 389, 398 };
//int16_t ank2[27]= { 318, 307, 309, 316, 323, 328, 332, 334, 332, 330, 328, 325, 321, 318, 316, 316, 318, 323, 327, 332, 334, 334, 332, 328, 327, 327, 319 };
//int16_t hip3[27]= { 315, 319, 319, 321, 324, 330, 337, 340, 340, 337, 331, 326, 321, 317, 315, 317, 321, 324, 330, 333, 337, 337, 337, 335, 331, 326, 315 };
//int16_t ank3[27]= { 301, 303, 313, 326, 335, 339, 337, 331, 324, 315, 310, 304, 304, 306, 312, 319, 326, 333, 337, 337, 331, 324, 313, 306, 303, 304, 301 };
//amp2.0
//int16_t hip4[27]= { 377, 369, 363, 363, 365, 371, 375, 379, 381, 383, 383, 379, 373, 365, 357, 353, 353, 357, 367, 379, 389, 391, 389, 383, 383, 389, 379 };
//int16_t ank4[27]= { 333, 337, 325, 313, 305, 303, 307, 315, 323, 331, 335, 337, 337, 333, 327, 321, 313, 307, 305, 305, 309, 319, 329, 335, 337, 333, 335 };
//int16_t hip1[27]= { 401, 391, 375, 345, 317, 297, 291, 301, 323, 349, 373, 391, 399, 397, 387, 369, 347, 325, 307, 297, 297, 307, 327, 351, 373, 385, 389 };
//int16_t ank1[27]= { 333, 329, 331, 329, 321, 313, 311, 313, 319, 325, 329, 333, 333, 331, 327, 323, 319, 317, 315, 315, 317, 321, 327, 333, 335, 333, 333 };
//int16_t hip2[27]= { 405, 399, 375, 349, 325, 309, 299, 301, 313, 333, 357, 381, 397, 403, 397, 383, 361, 339, 321, 309, 305, 309, 317, 335, 361, 393, 403 };
//int16_t ank2[27]= { 317, 305, 307, 315, 323, 329, 333, 335, 333, 331, 329, 325, 321, 317, 315, 315, 317, 323, 327, 333, 335, 335, 333, 329, 327, 327, 319 };
//int16_t hip3[27]= { 314, 318, 318, 320, 324, 330, 338, 342, 342, 338, 332, 326, 320, 316, 314, 316, 320, 324, 330, 334, 338, 338, 338, 336, 332, 326, 314 };
//int16_t ank3[27]= { 299, 301, 313, 327, 337, 341, 339, 333, 325, 315, 309, 303, 303, 305, 311, 319, 327, 335, 339, 339, 333, 325, 313, 305, 301, 303, 299 };
//amp2.2
//int16_t hip4[27]= { 377, 369, 362, 362, 364, 371, 375, 380, 382, 384, 384, 380, 373, 364, 355, 351, 351, 355, 366, 380, 391, 393, 391, 384, 384, 391, 380 };
//int16_t ank4[27]= { 334, 338, 325, 312, 303, 301, 305, 314, 323, 332, 336, 338, 338, 334, 327, 321, 312, 305, 303, 303, 307, 318, 329, 336, 338, 334, 336 };
//int16_t hip1[27]= { 406, 395, 377, 344, 314, 292, 285, 296, 320, 349, 375, 395, 404, 402, 391, 371, 347, 322, 303, 292, 292, 303, 325, 351, 375, 388, 393 };
//int16_t ank1[27]= { 334, 329, 331, 329, 320, 312, 309, 312, 318, 325, 329, 334, 334, 331, 327, 323, 318, 316, 314, 314, 316, 320, 327, 334, 336, 334, 334 };
//int16_t hip2[27]= { 411, 404, 378, 349, 323, 305, 294, 296, 310, 332, 358, 384, 402, 409, 402, 387, 362, 338, 318, 305, 301, 305, 314, 334, 362, 398, 409 };
//int16_t ank2[27]= { 316, 303, 305, 314, 323, 329, 334, 336, 334, 332, 329, 325, 321, 316, 314, 314, 316, 323, 327, 334, 336, 336, 334, 329, 327, 327, 318 };
//int16_t hip3[27]= { 313, 317, 317, 319, 324, 330, 339, 343, 343, 339, 332, 326, 319, 315, 313, 315, 319, 324, 330, 335, 339, 339, 339, 337, 332, 326, 313 };
//int16_t ank3[27]= { 297, 299, 312, 328, 339, 343, 341, 334, 325, 314, 308, 301, 301, 303, 310, 319, 328, 336, 341, 341, 334, 325, 312, 303, 299, 301, 297 };
//amp2.4
//int16_t hip4[27]= { 378, 368, 361, 361, 363, 370, 375, 380, 382, 385, 385, 380, 373, 363, 354, 349, 349, 354, 366, 380, 392, 394, 392, 385, 385, 392, 380 };
//int16_t ank4[27]= { 335, 340, 325, 311, 301, 299, 304, 313, 323, 332, 337, 340, 340, 335, 328, 320, 311, 304, 301, 301, 306, 318, 330, 337, 340, 335, 337 };
//int16_t hip1[27]= { 411, 399, 380, 344, 310, 286, 279, 291, 318, 349, 378, 399, 409, 406, 394, 373, 346, 320, 298, 286, 286, 298, 322, 351, 378, 392, 397 };
//int16_t ank1[27]= { 334, 330, 332, 330, 320, 310, 308, 310, 318, 325, 330, 334, 334, 332, 327, 322, 318, 315, 313, 313, 315, 320, 327, 334, 337, 334, 334 };
//int16_t hip2[27]= { 416, 409, 380, 349, 320, 301, 289, 291, 306, 330, 359, 387, 407, 414, 407, 390, 363, 337, 315, 301, 296, 301, 311, 332, 363, 402, 414 };
//int16_t ank2[27]= { 315, 301, 303, 313, 323, 330, 335, 337, 335, 332, 330, 325, 320, 315, 313, 313, 315, 323, 327, 335, 337, 337, 335, 330, 327, 327, 318 };
//int16_t hip3[27]= { 311, 316, 316, 318, 323, 330, 340, 345, 345, 340, 333, 326, 318, 314, 311, 314, 318, 323, 330, 335, 340, 340, 340, 338, 333, 326, 311 };
//int16_t ank3[27]= { 295, 297, 312, 328, 340, 345, 343, 336, 326, 314, 307, 300, 300, 302, 309, 319, 328, 338, 343, 343, 336, 326, 312, 302, 297, 300, 295 };
//amp2.6 can not move
//int16_t hip4[27]= { 386, 365, 352, 352, 349, 367, 399, 396, 393, 396, 396, 393, 393, 360, 334, 315, 321, 331, 365, 412, 412, 412, 412, 409, 409, 409, 396 };
//int16_t ank4[27]= { 336, 336, 329, 312, 303, 301, 305, 314, 325, 336, 336, 336, 336, 336, 329, 323, 312, 305, 301, 303, 309, 318, 329, 336, 336, 336, 336 };
//int16_t hip1[27]= { 465, 439, 393, 328, 247, 179, 185, 213, 260, 320, 387, 439, 465, 450, 426, 377, 330, 265, 216, 195, 187, 226, 276, 330, 385, 424, 434 };
//int16_t ank1[27]= { 334, 331, 329, 327, 320, 316, 309, 309, 316, 325, 331, 334, 336, 329, 323, 320, 320, 318, 314, 312, 314, 320, 329, 334, 334, 334, 334 };
//int16_t hip2[27]= { 476, 452, 405, 335, 257, 210, 213, 216, 236, 278, 338, 405, 468, 468, 455, 416, 359, 299, 255, 239, 216, 218, 244, 291, 364, 437, 470 };
//int16_t ank2[27]= { 316, 305, 301, 310, 325, 334, 334, 334, 332, 332, 332, 327, 321, 316, 312, 312, 314, 325, 334, 332, 334, 334, 334, 332, 329, 325, 318 };
//int16_t hip3[27]= { 252, 255, 268, 276, 273, 278, 317, 335, 320, 307, 296, 286, 265, 244, 255, 263, 276, 270, 278, 307, 315, 320, 315, 304, 299, 283, 247 };
//int16_t ank3[27]= { 297, 301, 310, 325, 343, 343, 341, 334, 323, 312, 308, 303, 303, 303, 310, 317, 328, 339, 341, 341, 336, 323, 310, 303, 301, 299, 297 };
//amp2.8 can not move
//int16_t hip4[27]= { 386, 364, 350, 350, 347, 367, 400, 397, 395, 397, 397, 395, 395, 358, 330, 311, 316, 327, 364, 414, 414, 414, 414, 411, 411, 411, 397 };
//int16_t ank4[27]= { 336, 336, 329, 312, 303, 301, 305, 314, 325, 336, 336, 336, 336, 336, 329, 323, 312, 305, 301, 303, 309, 318, 329, 336, 336, 336, 336 };
//int16_t hip1[27]= { 476, 448, 398, 328, 241, 168, 174, 204, 255, 319, 392, 448, 476, 459, 434, 381, 330, 260, 207, 185, 176, 218, 272, 330, 389, 431, 442 };
//int16_t ank1[27]= { 334, 331, 329, 327, 320, 316, 309, 309, 316, 325, 331, 334, 336, 329, 323, 320, 320, 318, 314, 312, 314, 320, 329, 334, 334, 334, 334 };
//int16_t hip2[27]= { 487, 461, 411, 335, 251, 201, 204, 207, 229, 274, 338, 411, 478, 478, 464, 422, 361, 296, 249, 232, 207, 209, 237, 288, 366, 445, 481 };
//int16_t ank2[27]= { 316, 305, 301, 310, 325, 334, 334, 334, 332, 332, 332, 327, 321, 316, 312, 312, 314, 325, 334, 332, 334, 334, 334, 332, 329, 325, 318 };
//int16_t hip3[27]= { 250, 252, 266, 275, 272, 278, 320, 339, 322, 308, 297, 286, 264, 241, 252, 261, 275, 269, 278, 308, 317, 322, 317, 306, 300, 283, 244 };
//int16_t ank3[27]= { 297, 301, 310, 325, 343, 343, 341, 334, 323, 312, 308, 303, 303, 303, 310, 317, 328, 339, 341, 341, 336, 323, 310, 303, 301, 299, 297 };
//degree 6 regression
//int16_t hip4[27]= { 378, 369, 367, 368, 371, 375, 377, 379, 379, 378, 376, 374, 371, 369, 368, 367, 368, 369, 371, 374, 377, 380, 382, 383, 382, 380, 377 };
//int16_t ank4[27]= { 331, 327, 322, 318, 316, 316, 317, 320, 322, 325, 328, 329, 329, 328, 326, 323, 320, 317, 315, 314, 315, 318, 323, 328, 332, 333, 325 };
//int16_t hip1[27]= { 375, 373, 359, 344, 332, 325, 324, 329, 337, 348, 358, 366, 371, 372, 369, 361, 351, 340, 330, 323, 321, 325, 335, 349, 364, 373, 365 };
//int16_t ank1[27]= { 329, 329, 327, 324, 322, 321, 320, 321, 322, 324, 326, 327, 328, 328, 327, 325, 323, 322, 320, 320, 320, 322, 325, 328, 331, 331, 327 };
//int16_t hip2[27]= { 378, 378, 366, 350, 337, 329, 326, 329, 336, 346, 356, 365, 372, 375, 373, 368, 360, 350, 340, 332, 327, 327, 334, 345, 360, 373, 377 };
//int16_t ank2[27]= { 321, 315, 316, 319, 323, 327, 329, 330, 330, 328, 326, 324, 322, 321, 320, 321, 322, 324, 326, 328, 329, 330, 330, 328, 326, 324, 323 };
//int16_t hip3[27]= { 323, 320, 321, 325, 328, 331, 333, 334, 333, 331, 329, 327, 325, 323, 322, 322, 324, 325, 328, 330, 332, 334, 334, 333, 330, 326, 321 };
//int16_t ank3[27]= { 307, 312, 318, 323, 327, 328, 327, 325, 322, 318, 315, 313, 312, 313, 315, 318, 322, 325, 328, 329, 328, 324, 319, 313, 308, 306, 312 };
//amp 1.4
//int16_t hip4[27]= { 379, 366, 364, 365, 369, 375, 378, 380, 380, 379, 376, 373, 369, 366, 365, 364, 365, 366, 369, 373, 378, 382, 385, 386, 385, 382, 378 };
//int16_t ank4[27]= { 339, 331, 321, 313, 309, 309, 311, 317, 321, 327, 333, 335, 335, 333, 329, 323, 317, 311, 307, 305, 307, 313, 323, 333, 341, 343, 327 };
//int16_t hip1[27]= { 393, 389, 366, 340, 320, 308, 306, 315, 328, 347, 364, 378, 386, 388, 383, 369, 352, 333, 316, 304, 301, 308, 325, 349, 374, 389, 376 };
//int16_t ank1[27]= { 333, 333, 329, 323, 319, 317, 315, 317, 319, 323, 327, 329, 331, 331, 329, 325, 321, 319, 315, 315, 315, 319, 325, 331, 337, 337, 329 };
//int16_t hip2[27]= { 388, 388, 371, 349, 330, 319, 315, 319, 329, 343, 357, 370, 379, 384, 381, 374, 363, 349, 335, 323, 316, 316, 326, 342, 363, 381, 386 };
//int16_t ank2[27]= { 319, 311, 312, 316, 322, 327, 330, 332, 332, 329, 326, 323, 320, 319, 318, 319, 320, 323, 326, 329, 330, 332, 332, 329, 326, 323, 322 };
//int16_t hip3[27]= { 321, 316, 318, 323, 328, 332, 335, 336, 335, 332, 329, 326, 323, 321, 319, 319, 322, 323, 328, 330, 333, 336, 336, 335, 330, 325, 318 };
//int16_t ank3[27]= { 302, 309, 317, 324, 330, 331, 330, 327, 323, 317, 313, 310, 309, 310, 313, 317, 323, 327, 331, 333, 331, 326, 319, 310, 303, 300, 309 };
//amp 1.8
//int16_t hip4[27]= { 380, 364, 361, 362, 368, 375, 379, 382, 382, 380, 377, 373, 368, 364, 362, 361, 362, 364, 368, 373, 379, 384, 388, 389, 388, 384, 379 };
//int16_t ank4[27]= { 337, 330, 321, 314, 310, 310, 312, 317, 321, 326, 332, 333, 333, 332, 328, 323, 317, 312, 308, 306, 308, 314, 323, 332, 339, 341, 326 };
//int16_t hip1[27]= { 395, 392, 367, 340, 318, 305, 304, 313, 327, 347, 365, 379, 388, 390, 385, 370, 352, 332, 314, 302, 298, 305, 323, 349, 376, 392, 377 };
//int16_t ank1[27]= { 332, 332, 328, 323, 319, 317, 316, 317, 319, 323, 326, 328, 330, 330, 328, 325, 321, 319, 316, 316, 316, 319, 325, 330, 335, 335, 328 };
//int16_t hip2[27]= { 398, 398, 377, 348, 324, 310, 305, 310, 323, 341, 359, 375, 387, 393, 389, 380, 366, 348, 330, 315, 306, 306, 319, 339, 366, 389, 396 };
//int16_t ank2[27]= { 318, 307, 309, 314, 321, 328, 332, 334, 334, 330, 327, 323, 319, 318, 316, 318, 319, 323, 327, 330, 332, 334, 334, 330, 327, 323, 321 };
//int16_t hip3[27]= { 319, 313, 315, 322, 328, 333, 337, 339, 337, 333, 330, 326, 322, 319, 317, 317, 321, 322, 328, 331, 335, 339, 339, 337, 331, 324, 315 };
//int16_t ank3[27]= { 297, 306, 317, 326, 333, 335, 333, 329, 324, 317, 311, 308, 306, 308, 311, 317, 324, 329, 335, 337, 335, 328, 319, 308, 299, 295, 306 };
// amp80 amp2.0,1.6   fail
//int16_t hip4[27]= { 384, 368, 358, 358, 356, 370, 394, 392, 390, 392, 392, 390, 390, 364, 344, 330, 334, 342, 368, 404, 404, 404, 404, 402, 402, 402, 392 };
//int16_t ank4[27]= { 335, 335, 329, 313, 305, 303, 307, 315, 325, 335, 335, 335, 335, 335, 329, 323, 313, 307, 303, 305, 311, 319, 329, 335, 335, 335, 335 };
//int16_t hip1[27]= { 434, 414, 378, 328, 266, 214, 218, 240, 276, 322, 374, 414, 434, 422, 404, 366, 330, 280, 242, 226, 220, 250, 288, 330, 372, 402, 410 };
//int16_t ank1[27]= { 333, 331, 329, 327, 321, 317, 311, 311, 317, 325, 331, 333, 335, 329, 323, 321, 321, 319, 315, 313, 315, 321, 329, 333, 333, 333, 333 };
//int16_t hip2[27]= { 443, 425, 389, 335, 275, 239, 241, 243, 259, 291, 337, 389, 437, 437, 427, 397, 353, 307, 273, 261, 243, 245, 265, 301, 357, 413, 439 };
//int16_t ank2[27]= { 317, 307, 303, 311, 325, 333, 333, 333, 331, 331, 331, 327, 321, 317, 313, 313, 315, 325, 333, 331, 333, 333, 333, 331, 329, 325, 319 };
//int16_t hip3[27]= { 260, 262, 272, 278, 276, 280, 310, 324, 312, 302, 294, 286, 270, 254, 262, 268, 278, 274, 280, 302, 308, 312, 308, 300, 296, 284, 256 };
//int16_t ank3[27]= { 299, 303, 311, 325, 341, 341, 339, 333, 323, 313, 309, 305, 305, 305, 311, 317, 327, 337, 339, 339, 335, 323, 311, 305, 303, 301, 299 };
// amp80 amp1.4
//int16_t hip4[27]= { 383, 371, 364, 364, 363, 373, 390, 388, 387, 388, 388, 387, 387, 369, 355, 345, 348, 353, 371, 397, 397, 397, 397, 395, 395, 395, 388 };
//int16_t ank4[27]= { 331, 331, 327, 316, 310, 309, 311, 317, 324, 331, 331, 331, 331, 331, 327, 323, 316, 311, 309, 310, 314, 320, 327, 331, 331, 331, 331 };
//int16_t hip1[27]= { 402, 388, 363, 328, 284, 248, 251, 266, 291, 323, 360, 388, 402, 393, 381, 354, 329, 294, 267, 256, 252, 273, 300, 329, 358, 379, 385 };
//int16_t ank1[27]= { 330, 329, 327, 326, 322, 319, 315, 315, 319, 325, 329, 330, 332, 327, 323, 322, 322, 320, 318, 316, 318, 322, 327, 330, 330, 330, 330 };
//int16_t hip2[27]= { 410, 398, 372, 335, 293, 267, 269, 270, 281, 304, 336, 372, 406, 406, 399, 378, 347, 315, 291, 283, 270, 272, 286, 311, 350, 389, 407 };
//int16_t ank2[27]= { 319, 312, 309, 315, 325, 330, 330, 330, 329, 329, 329, 326, 322, 319, 316, 316, 318, 325, 330, 329, 330, 330, 330, 329, 327, 325, 320 };
//int16_t hip3[27]= { 267, 269, 276, 280, 279, 281, 302, 312, 304, 297, 291, 286, 274, 263, 269, 273, 280, 277, 281, 297, 301, 304, 301, 295, 293, 284, 265 };
//int16_t ank3[27]= { 305, 307, 313, 323, 334, 334, 333, 328, 321, 314, 312, 309, 309, 309, 313, 317, 324, 331, 333, 333, 330, 321, 313, 309, 307, 306, 305 };
// 80 1.2
//int16_t hip4[27]= { 382, 372, 366, 366, 365, 374, 388, 387, 386, 387, 387, 386, 386, 370, 358, 350, 352, 357, 372, 394, 394, 394, 394, 393, 393, 393, 387 };
//int16_t ank4[27]= { 330, 330, 326, 317, 312, 311, 313, 318, 324, 330, 330, 330, 330, 330, 326, 323, 317, 313, 311, 312, 315, 320, 326, 330, 330, 330, 330 };
//int16_t hip1[27]= { 391, 379, 358, 328, 290, 259, 262, 275, 296, 324, 355, 379, 391, 384, 373, 350, 329, 299, 276, 266, 263, 281, 304, 329, 354, 372, 377 };
//int16_t ank1[27]= { 329, 328, 327, 326, 322, 320, 316, 316, 320, 325, 328, 329, 331, 327, 323, 322, 322, 321, 319, 317, 319, 322, 327, 329, 329, 329, 329 };
//int16_t hip2[27]= { 399, 389, 367, 335, 299, 277, 278, 279, 289, 308, 336, 367, 396, 396, 390, 372, 345, 318, 297, 290, 279, 281, 293, 314, 348, 381, 397 };
//int16_t ank2[27]= { 320, 314, 311, 316, 325, 329, 329, 329, 328, 328, 328, 326, 322, 320, 317, 317, 319, 325, 329, 328, 329, 329, 329, 328, 327, 325, 321 };
//int16_t hip3[27]= { 270, 271, 277, 281, 280, 282, 300, 308, 301, 295, 290, 286, 276, 266, 271, 275, 281, 278, 282, 295, 299, 301, 299, 294, 292, 284, 268 };
//int16_t ank3[27]= { 307, 309, 314, 322, 332, 332, 331, 327, 321, 315, 313, 310, 310, 310, 314, 317, 323, 329, 331, 331, 328, 321, 314, 310, 309, 308, 307 };
//symmetric, stay :(
//int16_t hip4[27]= { 379, 366, 364, 365, 369, 375, 378, 380, 380, 379, 376, 373, 369, 366, 365, 364, 365, 366, 369, 373, 378, 382, 385, 386, 385, 382, 378 };
//int16_t ank4[27]= { 334, 328, 321, 316, 313, 313, 314, 318, 321, 325, 330, 331, 331, 330, 327, 323, 318, 314, 311, 310, 311, 316, 323, 330, 335, 337, 325 };
//int16_t hip1[27]= { 385, 382, 363, 342, 325, 315, 314, 321, 332, 347, 361, 372, 379, 381, 377, 365, 351, 336, 322, 312, 309, 315, 329, 349, 370, 382, 371 };
//int16_t ank1[27]= { 330, 330, 327, 323, 320, 319, 318, 319, 320, 323, 326, 327, 329, 329, 327, 325, 322, 320, 318, 318, 318, 320, 325, 329, 333, 333, 327 };
//int16_t hip2[27]= { 385, 382, 363, 342, 325, 315, 314, 321, 332, 347, 361, 372, 379, 381, 377, 365, 351, 336, 322, 312, 309, 315, 329, 349, 370, 382, 371 };
//int16_t ank2[27]= { 330, 330, 327, 323, 320, 319, 318, 319, 320, 323, 326, 327, 329, 329, 327, 325, 322, 320, 318, 318, 318, 320, 325, 329, 333, 333, 327 };
//int16_t hip3[27]= { 321, 316, 318, 323, 328, 332, 335, 336, 335, 332, 329, 326, 323, 321, 319, 319, 322, 323, 328, 330, 333, 336, 336, 335, 330, 325, 318 };
//int16_t ank3[27]= { 334, 328, 321, 316, 313, 313, 314, 318, 321, 325, 330, 331, 331, 330, 327, 323, 318, 314, 311, 310, 311, 316, 323, 330, 335, 337, 325 };
// sin 
//int16_t hip4[27]= { 360, 357, 356, 356, 357, 360, 363, 366, 369, 370, 369, 367, 364, 360, 358, 356, 356, 357, 359, 363, 366, 368, 370, 369, 367, 364, 361 };
//int16_t ank4[27]= { 335, 332, 328, 324, 321, 320, 321, 323, 327, 331, 335, 337, 337, 335, 332, 328, 324, 321, 320, 321, 324, 328, 332, 335, 337, 337, 334 };
//int16_t hip1[27]= { 368, 362, 351, 339, 328, 320, 318, 320, 328, 339, 351, 362, 368, 369, 365, 356, 344, 333, 323, 318, 318, 324, 334, 346, 358, 366, 370 };
//int16_t ank1[27]= { 335, 335, 333, 331, 328, 326, 325, 326, 328, 330, 332, 334, 335, 335, 333, 331, 328, 326, 325, 326, 327, 330, 332, 334, 335, 335, 333 };
//int16_t hip2[27]= { 372, 367, 357, 346, 334, 325, 321, 321, 327, 337, 349, 360, 369, 372, 371, 364, 353, 342, 331, 323, 320, 323, 330, 341, 353, 364, 370 };
//int16_t ank2[27]= { 326, 325, 325, 327, 329, 332, 334, 336, 336, 335, 333, 331, 328, 326, 325, 325, 326, 329, 331, 334, 335, 336, 336, 334, 332, 329, 327 };
//int16_t hip3[27]= { 322, 321, 322, 324, 327, 330, 333, 334, 334, 333, 330, 327, 324, 322, 321, 321, 323, 326, 329, 331, 333, 334, 333, 332, 329, 326, 323 };
//int16_t ank3[27]= { 317, 320, 324, 329, 333, 336, 336, 334, 330, 325, 320, 317, 316, 318, 321, 326, 331, 334, 336, 336, 333, 328, 324, 319, 317, 316, 319 };
// 1.2
//int16_t hip4[27]= { 360, 356, 355, 355, 356, 360, 363, 367, 371, 372, 371, 368, 365, 360, 357, 355, 355, 356, 359, 363, 367, 369, 372, 371, 368, 365, 361 };
//int16_t ank4[27]= { 337, 333, 328, 323, 320, 319, 320, 322, 327, 332, 337, 339, 339, 337, 333, 328, 323, 320, 319, 320, 323, 328, 333, 337, 339, 339, 335 };
//int16_t hip1[27]= { 373, 366, 352, 338, 325, 315, 313, 315, 325, 338, 352, 366, 373, 374, 369, 358, 344, 331, 319, 313, 313, 320, 332, 346, 361, 370, 375 };
//int16_t ank1[27]= { 336, 336, 333, 331, 327, 325, 324, 325, 327, 330, 332, 335, 336, 336, 333, 331, 327, 325, 324, 325, 326, 330, 332, 335, 336, 336, 333 };
//int16_t hip2[27]= { 377, 371, 359, 346, 332, 321, 316, 316, 323, 335, 350, 363, 374, 377, 376, 368, 354, 341, 328, 318, 315, 318, 327, 340, 354, 368, 375 };
//int16_t ank2[27]= { 325, 324, 324, 326, 329, 332, 335, 337, 337, 336, 333, 331, 327, 325, 324, 324, 325, 329, 331, 335, 336, 337, 337, 335, 332, 329, 326 };
//int16_t hip3[27]= { 321, 320, 321, 323, 327, 331, 334, 335, 335, 334, 331, 327, 323, 321, 320, 320, 322, 326, 329, 332, 334, 335, 334, 333, 329, 326, 322 };
//int16_t ank3[27]= { 316, 319, 324, 330, 335, 338, 338, 336, 331, 325, 319, 316, 314, 317, 320, 326, 332, 336, 338, 338, 335, 329, 324, 318, 316, 314, 318 };
// 1.4
//int16_t hip4[27]= { 359, 355, 354, 354, 355, 359, 364, 368, 372, 373, 372, 369, 365, 359, 357, 354, 354, 355, 358, 364, 368, 371, 373, 372, 369, 365, 361 };
//int16_t ank4[27]= { 338, 334, 328, 322, 318, 317, 318, 321, 327, 332, 338, 341, 341, 338, 334, 328, 322, 318, 317, 318, 322, 328, 334, 338, 341, 341, 336 };
//int16_t hip1[27]= { 378, 369, 354, 337, 322, 310, 308, 310, 322, 337, 354, 369, 378, 379, 373, 361, 344, 329, 315, 308, 308, 316, 330, 347, 364, 375, 380 };
//int16_t ank1[27]= { 337, 337, 334, 331, 327, 324, 323, 324, 327, 330, 332, 335, 337, 337, 334, 331, 327, 324, 323, 324, 325, 330, 332, 335, 337, 337, 334 };
//int16_t hip2[27]= { 382, 375, 361, 346, 329, 317, 311, 311, 319, 333, 350, 366, 378, 382, 381, 371, 356, 340, 325, 314, 310, 314, 324, 339, 356, 371, 380 };
//int16_t ank2[27]= { 324, 323, 323, 326, 328, 333, 335, 338, 338, 337, 334, 331, 327, 324, 323, 323, 324, 328, 331, 335, 337, 338, 338, 335, 333, 328, 326 };
//int16_t hip3[27]= { 320, 318, 320, 323, 327, 331, 335, 337, 337, 335, 331, 327, 323, 320, 318, 318, 321, 325, 330, 332, 335, 337, 335, 334, 330, 325, 321 };
//int16_t ank3[27]= { 314, 318, 324, 331, 336, 340, 340, 338, 332, 325, 318, 314, 312, 315, 319, 326, 333, 338, 340, 340, 336, 329, 324, 317, 314, 312, 317 };
// 1.6
//int16_t hip4[27]= { 348, 343, 341, 341, 343, 348, 353, 357, 362, 364, 362, 359, 354, 348, 345, 341, 341, 343, 346, 353, 357, 361, 364, 362, 359, 354, 349 };
//int16_t ank4[27]= { 346, 341, 335, 328, 323, 322, 323, 327, 333, 339, 346, 349, 349, 346, 341, 335, 328, 323, 322, 323, 328, 335, 341, 346, 349, 349, 344 };
//int16_t hip1[27]= { 378, 368, 351, 331, 314, 301, 298, 301, 314, 331, 351, 368, 378, 379, 373, 359, 339, 322, 306, 298, 298, 307, 323, 343, 362, 375, 381 };
//int16_t ank1[27]= { 344, 344, 341, 337, 333, 329, 328, 329, 333, 336, 339, 342, 344, 344, 341, 337, 333, 329, 328, 329, 331, 336, 339, 342, 344, 344, 341 };
//int16_t hip2[27]= { 382, 374, 358, 341, 321, 307, 301, 301, 310, 326, 345, 363, 377, 382, 381, 369, 352, 334, 317, 304, 299, 304, 315, 333, 352, 369, 379 };
//int16_t ank2[27]= { 330, 328, 328, 331, 334, 339, 342, 346, 346, 344, 341, 338, 333, 330, 328, 328, 330, 334, 338, 342, 344, 346, 346, 342, 339, 334, 331 };
//int16_t hip3[27]= { 319, 318, 319, 323, 327, 332, 337, 339, 339, 337, 332, 327, 323, 319, 318, 318, 321, 326, 331, 334, 337, 339, 337, 335, 331, 326, 321 };
//int16_t ank3[27]= { 320, 325, 331, 339, 345, 350, 350, 347, 341, 333, 325, 320, 318, 321, 326, 334, 342, 347, 350, 350, 345, 337, 331, 323, 320, 318, 323 };
// 1.8
//int16_t hip4[27]= { 356, 351, 349, 349, 351, 356, 362, 367, 372, 374, 372, 369, 363, 356, 353, 349, 349, 351, 354, 362, 367, 371, 374, 372, 369, 363, 358 };
//int16_t ank4[27]= { 342, 336, 329, 322, 316, 315, 316, 320, 327, 334, 342, 345, 345, 342, 336, 329, 322, 316, 315, 316, 322, 329, 336, 342, 345, 345, 340 };
//int16_t hip1[27]= { 386, 376, 356, 334, 314, 300, 296, 300, 314, 334, 356, 376, 386, 388, 381, 365, 343, 323, 305, 296, 296, 307, 325, 347, 368, 383, 390 };
//int16_t ank1[27]= { 340, 340, 336, 332, 327, 323, 322, 323, 327, 331, 334, 338, 340, 340, 336, 332, 327, 323, 322, 323, 325, 331, 334, 338, 340, 340, 336 };
//int16_t hip2[27]= { 392, 383, 365, 345, 323, 307, 300, 300, 311, 329, 350, 370, 386, 392, 390, 377, 358, 338, 318, 304, 298, 304, 316, 336, 358, 377, 388 };
//int16_t ank2[27]= { 324, 322, 322, 325, 329, 334, 338, 342, 342, 340, 336, 333, 327, 324, 322, 322, 324, 329, 333, 338, 340, 342, 342, 338, 334, 329, 325 };
//int16_t hip3[27]= { 318, 316, 318, 321, 327, 332, 338, 339, 339, 338, 332, 327, 321, 318, 316, 316, 320, 325, 330, 334, 338, 339, 338, 336, 330, 325, 320 };
//int16_t ank3[27]= { 312, 317, 324, 333, 341, 346, 346, 342, 335, 326, 317, 312, 310, 314, 319, 328, 337, 342, 346, 346, 341, 332, 324, 315, 312, 310, 315 };
// 2 
//int16_t hip4[27]= { 351, 345, 343, 343, 345, 351, 357, 363, 369, 371, 369, 365, 359, 351, 347, 343, 343, 345, 349, 357, 363, 367, 371, 369, 365, 359, 353 };
//int16_t ank4[27]= { 346, 340, 332, 324, 318, 316, 318, 322, 330, 338, 346, 350, 350, 346, 340, 332, 324, 318, 316, 318, 324, 332, 340, 346, 350, 350, 344 };
//int16_t hip1[27]= { 389, 377, 355, 331, 309, 293, 289, 293, 309, 331, 355, 377, 389, 391, 383, 365, 341, 319, 299, 289, 289, 301, 321, 345, 369, 385, 393 };
//int16_t ank1[27]= { 343, 343, 339, 335, 329, 325, 323, 325, 329, 333, 337, 341, 343, 343, 339, 335, 329, 325, 323, 325, 327, 333, 337, 341, 343, 343, 339 };
//int16_t hip2[27]= { 395, 385, 365, 343, 319, 301, 293, 293, 305, 325, 349, 371, 389, 395, 393, 379, 357, 335, 313, 297, 291, 297, 311, 333, 357, 379, 391 };
//int16_t ank2[27]= { 325, 323, 323, 327, 331, 337, 341, 345, 345, 343, 339, 335, 329, 325, 323, 323, 325, 331, 335, 341, 343, 345, 345, 341, 337, 331, 327 };
//int16_t hip3[27]= { 317, 315, 317, 321, 327, 333, 339, 341, 341, 339, 333, 327, 321, 317, 315, 315, 319, 325, 331, 335, 339, 341, 339, 337, 331, 325, 319 };
//int16_t ank3[27]= { 313, 319, 327, 337, 345, 351, 351, 347, 339, 329, 319, 313, 311, 315, 321, 331, 341, 347, 351, 351, 345, 335, 327, 317, 313, 311, 317 };
// 2.2
//int16_t hip4[27]= { 351, 344, 342, 342, 344, 351, 357, 364, 370, 373, 370, 366, 359, 351, 346, 342, 342, 344, 348, 357, 364, 368, 373, 370, 366, 359, 353 };
//int16_t ank4[27]= { 346, 340, 332, 324, 318, 316, 318, 322, 330, 338, 346, 350, 350, 346, 340, 332, 324, 318, 316, 318, 324, 332, 340, 346, 350, 350, 344 };
//int16_t hip1[27]= { 394, 381, 357, 330, 306, 289, 284, 289, 306, 330, 357, 381, 394, 396, 388, 368, 341, 317, 295, 284, 284, 297, 319, 346, 372, 390, 399 };
//int16_t ank1[27]= { 343, 343, 339, 335, 329, 325, 323, 325, 329, 333, 337, 341, 343, 343, 339, 335, 329, 325, 323, 325, 327, 333, 337, 341, 343, 343, 339 };
//int16_t hip2[27]= { 400, 389, 367, 343, 316, 297, 288, 288, 301, 323, 349, 374, 393, 400, 398, 382, 358, 334, 310, 292, 286, 292, 308, 332, 358, 382, 396 };
//int16_t ank2[27]= { 325, 323, 323, 327, 331, 337, 341, 345, 345, 343, 339, 335, 329, 325, 323, 323, 325, 331, 335, 341, 343, 345, 345, 341, 337, 331, 327 };
//int16_t hip3[27]= { 316, 314, 316, 320, 327, 333, 340, 342, 342, 340, 333, 327, 320, 316, 314, 314, 318, 325, 331, 336, 340, 342, 340, 338, 331, 325, 318 };
//int16_t ank3[27]= { 313, 319, 327, 337, 345, 351, 351, 347, 339, 329, 319, 313, 311, 315, 321, 331, 341, 347, 351, 351, 345, 335, 327, 317, 313, 311, 317 };
//2.4
//int16_t hip4[27]= { 342, 335, 333, 333, 335, 342, 349, 357, 364, 366, 364, 359, 352, 342, 337, 333, 333, 335, 340, 349, 357, 361, 366, 364, 359, 352, 345 };
//int16_t ank4[27]= { 346, 340, 332, 324, 318, 316, 318, 322, 330, 338, 346, 350, 350, 346, 340, 332, 324, 318, 316, 318, 324, 332, 340, 346, 350, 350, 344 };
//int16_t hip1[27]= { 391, 377, 350, 322, 295, 276, 271, 276, 295, 322, 350, 377, 391, 394, 384, 362, 334, 307, 283, 271, 271, 286, 310, 338, 367, 386, 396 };
//int16_t ank1[27]= { 343, 343, 339, 335, 329, 325, 323, 325, 329, 333, 337, 341, 343, 343, 339, 335, 329, 325, 323, 325, 327, 333, 337, 341, 343, 343, 339 };
//int16_t hip2[27]= { 397, 385, 361, 335, 306, 284, 275, 275, 289, 313, 342, 368, 390, 397, 395, 378, 352, 325, 299, 280, 272, 280, 296, 323, 352, 378, 392 };
//int16_t ank2[27]= { 325, 323, 323, 327, 331, 337, 341, 345, 345, 343, 339, 335, 329, 325, 323, 323, 325, 331, 335, 341, 343, 345, 345, 341, 337, 331, 327 };
//int16_t hip3[27]= { 307, 304, 307, 312, 319, 326, 333, 336, 336, 333, 326, 319, 312, 307, 304, 304, 309, 316, 324, 328, 333, 336, 333, 331, 324, 316, 309 };
//int16_t ank3[27]= { 313, 319, 327, 337, 345, 351, 351, 347, 339, 329, 319, 313, 311, 315, 321, 331, 341, 347, 351, 351, 345, 335, 327, 317, 313, 311, 317 };

int16_t initialJointValue = 330;
float totalEnergy = 0;
float busVoltage = 0;
float current = 0; // 以毫安为单位
float power = 0;
int16_t timestep = 0;
void setup() {
  Serial.begin(9600); // USB debug serial
//  Serial.begin(9600); // Bluetooth serial
//  Serial.print("Serial is ready!");
  pwm.begin();pwm.setPWMFreq(60); // can not change
  delay(100);
  for (int i=8;i>0;i--) {
    pwm.setPWM(i, 0, initialJointValue);
    lastJointValue[i]=initialJointValue;
    delay(100);
  }
//  Wire.begin();
//  Wire.beginTransmission(MPU6050_addr);
//  Wire.write(0x6B);Wire.write(0);
//  Wire.endTransmission(true);
  sensor219.begin();
//  Serial.print("All ready!");
//  Serial.print(Serial.available());
 
  lastTime = millis()/1000;
}

void loop() {
//  Serial.print(Serial.available());
  unsigned long Nowtime= millis()/1000; //Get the current system running time 
  if (Serial.available() > 0 and Nowtime < Runtime) {
//    String comdata = Serial.readStringUntil('$');
//    if (comdata.startsWith(String('^'))) {
//      int index = 0, angles[8] = {0,0,0,0,0,0,0,0};
//      comdata = comdata.substring(1, comdata.length());
//      index = comdata.indexOf('&');
//      // parse message into servo id and angle
//      while (index != -1) {
//        String op = comdata.substring(0, index);
//        int id = op.substring(0, op.indexOf('=')).toInt();
//        int angle = op.substring(op.indexOf('=')+1).toInt();
//        comdata = comdata.substring(index+1);
//        if (id != 0 && angle != 0) {
//          angles[id-1] = angle;
//        }
//        index = comdata.indexOf('&');
//      }
      int angles[8] = {0,0,0,0,0,0,0,0};
      // Controlling servo motors
//      Serial.println("Controlling servo motors");
      Serial.print("^");
      angles[0] = hip1[timestep%n];
      angles[1] = hip2[timestep%n];
      angles[2] = hip3[timestep%n];
      angles[3] = hip4[timestep%n];
      angles[4] = ank1[timestep%n];
      angles[5] = ank2[timestep%n];
      angles[6] = ank3[timestep%n];
      angles[7] = ank4[timestep%n];
      for (int i=0;i<8;i++) {
        power= 0;
        if (angles[i] != 0) {
          pwm.setPWM(i+1, 0, angles[i]); //
          
          busVoltage = sensor219.getBusVoltage_V();  //获取电压值
          current = sensor219.getCurrent_mA(); 
          // 获取电流值
          power = power + busVoltage * (current/1000)/8; // 计算功率
          
          Serial.print(angles[i]); Serial.print("&");
//          Serial.println("Joint " + String(i+1) + ' ' + " rotate " + String(angles[i]) + ' ' + " degree");
        }
        totalEnergy = totalEnergy + power ;
          
      }
      for (int i=0;i<8;i++) {   // angle difference
          Serial.print(lastJointValue[i]-angles[i]); Serial.print("&");
          lastJointValue[i] = angles[i];
      }
//      Serial.print("0\n");
      lastTime = Nowtime;
      Serial.print(busVoltage); Serial.print("&");  // the V of the last joints 
      ////  Serial.print(" V");  Serial.print("&");
      Serial.print(current); Serial.print("&");    // the I of the last joints 
      ////  Serial.print(" A");Serial.print("&");
      Serial.print(power); Serial.print("&");
      //  Serial.print(" W");  Serial.print("&");
      Serial.print(totalEnergy); Serial.print("\n"); // average energy per step
      timestep +=1;
//      delay(100);
//    }
  }
  else{
    for (int i=8;i>0;i--) {
      pwm.setPWM(i, 0, initialJointValue);
      lastJointValue[i]=initialJointValue;
      delay(100);
    }
  }
}



 
